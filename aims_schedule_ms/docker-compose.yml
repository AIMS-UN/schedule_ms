# version: '3.8'
# services:
#   db:
#     build: ./Database
#     restart: always
#     # environment:
#     #   - POSTGRES_USER=postgres
#     #   - POSTGRES_PASSWORD=postgres
#     ports:
#       - '5434:5432'
#     networks:
#       - mynet
#     # volumes:
#     #   - ./Database/data:/var/lib/postgresql/data
#   ms:
#     build: .
#     depends_on:
#       - db
#     restart: always
#     environment:
#       - POSTGRES_USER=postgres
#       - POSTGRES_PASSWORD=postgres
#       - POSTGRES_DB=aims_enrollment_db
#       - POSTGRES_HOST=postgresdb
#       - POSTGRES_PORT=5434
#     ports:
#       - '4000:4000'
#     networks:
#       - mynet
# # volumes:
# #   db:
# #     driver: local
# networks:
#   mynet:
#     driver: bridge

version: '3.9'
services:
  postgresdb:
    build: ./Database
    container_name: aims_enrollment_db
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=${DB_HOST}
      - POSTGRES_PORT=${DB_PORT}
    ports:
      - '5434:5432'
    # networks:
    #   - learning

  # ms:
  #   container_name: aims_schedule_ms
  #   environment:
  #     - POSTGRES_USER=${DB_USER}
  #     - POSTGRES_PASSWORD=${DB_PASSWORD}
  #     - POSTGRES_DB=${DB_NAME}
  #     - POSTGRES_HOST=${DB_HOST}
  #     - POSTGRES_PORT=${DB_PORT}
  #   tty: true
  #   build: .
  #   ports:
  #     - 4000:4000
  #   restart: on-failure
    # volumes:
    #   - .:/app
    # depends_on:
    #   - postgresdb
    # networks:
    #   - learning

# Networks to be created to facilitate communication between containers
# networks:
#   learning:
#     driver: bridge